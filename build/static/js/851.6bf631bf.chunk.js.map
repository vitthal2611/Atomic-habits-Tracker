{"version":3,"file":"static/js/851.6bf631bf.chunk.js","mappings":"6KAEA,MAiFA,EAjFoBA,IAA8B,IAA7B,OAAEC,EAAM,YAAEC,GAAaF,EAC1C,MAqBMG,EArBeC,MACnB,MAAMD,EAAO,GACPE,EAAQ,IAAIC,KAClB,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,MAAMC,EAAM,IAAIF,KAAKD,GACrBG,EAAIC,QAAQJ,EAAMK,UAAYH,GAC9BJ,EAAKQ,KAAKH,EACZ,CACA,OAAOL,GAaIC,GAEb,OACEQ,EAAAA,EAAAA,MAAA,WAASC,UAAU,eAAe,aAAW,gBAAeC,SAAA,EAC1DC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sCACJC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gBAAeC,SAAC,4FAE7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAeG,KAAK,QAAQ,aAAW,wBAAuBF,SAAA,EAC3EF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAiBG,KAAK,MAAKF,SAAA,EACxCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAYG,KAAK,eAAcF,SAAC,UAC9CX,EAAKc,IAAI,CAACT,EAAKD,KACdK,EAAAA,EAAAA,MAAA,OAAaC,UAAU,UAAUG,KAAK,eAAcF,SAAA,EAClDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,SAAEN,EAAIU,mBAAmB,KAAM,CAACC,QAAS,aAClEJ,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,SAAEN,EAAIE,cAFvBH,OAObN,EAAOgB,IAAIG,IACVR,EAAAA,EAAAA,MAAA,OAAoBC,UAAU,cAAcG,KAAK,MAAKF,SAAA,EACpDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAaG,KAAK,OAAMF,SAAA,EACrCC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,aAAaG,KAAK,MAAM,aAAYI,EAAMC,KAAKP,SAAEM,EAAME,QACvEP,EAAAA,EAAAA,KAAA,QAAMF,UAAU,aAAYC,SAAEM,EAAMC,UAErClB,EAAKc,IAAI,CAACT,EAAKD,KACd,MAAMgB,EAnCEC,EAACJ,EAAOK,IAEnBA,GADW,IAAInB,KAAKc,EAAMM,WAkCPF,CAAYJ,EAAOZ,GAC7BmB,EA/BEC,EAACR,EAAOZ,KAC1B,MAAMqB,EAAMrB,EAAIsB,eAChB,OAAOV,EAAMW,MAAMC,KAAKC,GAASA,EAAMJ,MAAQA,GAAOI,EAAMN,YA6BhCC,CAAYR,EAAOZ,GACrC,OACEO,EAAAA,EAAAA,KAAA,OAEEF,UAAS,gBAAAqB,OAAkBX,EAAU,WAAa,YAClDY,QAASZ,EAAU,IAAMrB,EAAYkB,EAAMgB,GAAI5B,QAAO6B,EACtDrB,KAAK,OACLsB,SAAUf,EAAU,GAAK,EACzBgB,UAAYC,KACNjB,GAAsB,UAAViB,EAAEX,KAA6B,MAAVW,EAAEX,MACrCW,EAAEC,iBACFvC,EAAYkB,EAAMgB,GAAI5B,KAG1B,gBAAA0B,OAAed,EAAMC,KAAI,QAAAa,OAAO1B,EAAIU,qBAAoB,MAAAgB,OAAKP,EAAY,YAAc,iBAAeO,OAAGX,EAAU,oBAAsB,iBAAkBT,UAE3JC,EAAAA,EAAAA,KAAA,OAAKF,UAAS,eAAAqB,OAAiBP,EAAY,YAAc,GAAE,KAAAO,OAAKX,EAAuB,GAAb,YAAkBT,SACzFa,EAAY,SAAM,YAdhBpB,OAVHa,EAAMgB,SAiCpBrB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2E","sources":["components/BacklogView.js"],"sourcesContent":["import React from 'react';\n\nconst BacklogView = ({ habits, toggleHabit }) => {\n  const getLast7Days = () => {\n    const days = [];\n    const today = new Date();\n    for (let i = 1; i <= 7; i++) {\n      const day = new Date(today);\n      day.setDate(today.getDate() - i);\n      days.push(day);\n    }\n    return days;\n  };\n\n  const canEditDate = (habit, date) => {\n    const startDate = new Date(habit.startDate);\n    return date >= startDate;\n  };\n\n  const isCompleted = (habit, day) => {\n    const key = day.toDateString();\n    return habit.daily.some(entry => entry.key === key && entry.completed);\n  };\n\n  const days = getLast7Days();\n\n  return (\n    <section className=\"backlog-view\" aria-label=\"Habit backlog\">\n      <h3>⏰ Catch Up on Missed Habits</h3>\n      <p className=\"backlog-intro\">Mark habits you completed but forgot to log. Every action counts toward your identity!</p>\n      \n      <div className=\"backlog-grid\" role=\"table\" aria-label=\"Habit completion grid\">\n        <div className=\"backlog-header\" role=\"row\">\n          <div className=\"habit-col\" role=\"columnheader\">Habit</div>\n          {days.map((day, i) => (\n            <div key={i} className=\"day-col\" role=\"columnheader\">\n              <div className=\"day-name\">{day.toLocaleDateString('en', {weekday: 'short'})}</div>\n              <div className=\"day-date\">{day.getDate()}</div>\n            </div>\n          ))}\n        </div>\n        \n        {habits.map(habit => (\n          <div key={habit.id} className=\"backlog-row\" role=\"row\">\n            <div className=\"habit-info\" role=\"cell\">\n              <span className=\"habit-icon\" role=\"img\" aria-label={habit.name}>{habit.icon}</span>\n              <span className=\"habit-name\">{habit.name}</span>\n            </div>\n            {days.map((day, i) => {\n              const canEdit = canEditDate(habit, day);\n              const completed = isCompleted(habit, day);\n              return (\n                <div \n                  key={i} \n                  className={`backlog-cell ${canEdit ? 'editable' : 'disabled'}`} \n                  onClick={canEdit ? () => toggleHabit(habit.id, day) : undefined}\n                  role=\"cell\"\n                  tabIndex={canEdit ? 0 : -1}\n                  onKeyDown={(e) => {\n                    if (canEdit && (e.key === 'Enter' || e.key === ' ')) {\n                      e.preventDefault();\n                      toggleHabit(habit.id, day);\n                    }\n                  }}\n                  aria-label={`${habit.name} on ${day.toLocaleDateString()}: ${completed ? 'completed' : 'not completed'}${canEdit ? ', click to toggle' : ', cannot edit'}`}\n                >\n                  <div className={`backlog-dot ${completed ? 'completed' : ''} ${!canEdit ? 'disabled' : ''}`}>\n                    {completed ? '✓' : '○'}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        ))}\n      </div>\n      \n      <div className=\"backlog-note\">\n        <p>Click on any circle to mark that habit as completed for that day.</p>\n      </div>\n    </section>\n  );\n};\n\nexport default BacklogView;"],"names":["_ref","habits","toggleHabit","days","getLast7Days","today","Date","i","day","setDate","getDate","push","_jsxs","className","children","_jsx","role","map","toLocaleDateString","weekday","habit","name","icon","canEdit","canEditDate","date","startDate","completed","isCompleted","key","toDateString","daily","some","entry","concat","onClick","id","undefined","tabIndex","onKeyDown","e","preventDefault"],"sourceRoot":""}